type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AuthorizedOperator @entity(immutable: true) {
  id: Bytes!
  Web3Task_id: BigInt! # uint256
  interfaceId: Bytes! # bytes4
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AuthorizedPersonnel @entity(immutable: true) {
  id: Bytes!
  Web3Task_id: BigInt! # uint256
  addr: Bytes! # address
  authorized: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskCreated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  creator: Bytes! # address
  assignee: Bytes! # address
  reward: BigInt! # uint256
  endDate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskStarted @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  assignee: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskUpdated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
